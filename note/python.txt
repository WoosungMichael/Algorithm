- 리스트 역순으로 정렬
    - arr.sort(reverse=True)

- 교집합과 합집합
    - union = list((set(arr1) | set(arr2)))
    - intersection = list((set(arr1) & set(arr2)))

- 리스트 초기화
    - arr = [0 for i in range(arr_length)]
    - arr = [0] * 26
    - ex) 
            arr = [[0 for i in range(3)]] * 5
            print(arr)
            arr[1][1] = 1
            print(arr)
            print("========")
            arr2 = [[0 for i in range(3)]for j in range(5)]
            print(arr2)
            arr2[1][1] = 1
            print(arr2)

        =>
            [[0, 0, 0], [0, 0, 0], [0, 0, 0], [0, 0, 0], [0, 0, 0]]
            [[0, 1, 0], [0, 1, 0], [0, 1, 0], [0, 1, 0], [0, 1, 0]]
            ========
            [[0, 0, 0], [0, 0, 0], [0, 0, 0], [0, 0, 0], [0, 0, 0]]
            [[0, 0, 0], [0, 1, 0], [0, 0, 0], [0, 0, 0], [0, 0, 0]]

- 리스트 최빈값
    - from collections import Counter
    - 최빈값이 하나인 경우
        arr_1 = Counter(arr_2)
        val = arr_1.most_common(1)[0][0]


    - 최빈값이 여러개인 경우
        arr_1 = Counter(arr_2)
        cnt = arr_1.most_common()[0][1]
        arr = []
        for num in arr_1.most_common(): 
            if num[1] == cnt: 
                arr.append(num[0]) 

- 리스트 문자열 연결
    - str = ''.join(arr)

- 리스트 요소 지우기
    - del arr[i]

- 아스키코드
    - ord('a') = 97
    - chr(65) = A

- 문자열 대소문자 
    - 변환
        - str.upper()
        - str.lower()
    - 판별
        - str.isupper()
        - str.islower()

- 문자열 역순 출력
    - print(str[::-1])

- 파이썬 for문
    - 역순
        - for i in reversed(range(n)):
        - for i in range(n, 0, -1):

- 순열
    - from itertools import permutations 
    - items = ['1', '2', '3', '4', '5'] 
      list(permutations(items, 2)) 
      [('1', '2'), ('1', '3'), ('1', '4'), ('1', '5'), ('2', '1'), ('2', '3'), ('2', '4'), ('2', '5'), ('3', '1'), ('3', '2'), ('3', '4'), ('3', '5'), ('4', '1'), ('4', '2'), ('4', '3'), ('4', '5'), ('5', '1'), ('5', '2'), ('5', '3'), ('5', '4')] 

- 조합
    - from itertools import combinations 
    - items = ['1', '2', '3', '4', '5'] 
      list(combinations(items, 2)) 
      [('1', '2'), ('1', '3'), ('1', '4'), ('1', '5'), ('2', '3'), ('2', '4'), ('2', '5'), ('3', '4'), ('3', '5'), ('4', '5')]

- 중복 순열
    - from itertools import product
    - for i in product([1,2,3],'ab'):
        print(i, end=" ")
      (1, 'a') (1, 'b') (2, 'a') (2, 'b') (3, 'a') (3, 'b') 


- 파일 import
    - 하위 폴더에 있는 파일 import
        - Structure
            -folder1
            --aaa.py
            --bbb.py
            --folder2
            ---ccc.py

        - aaa.py에서 ccc.py 불러올 때
            from folder2 import ccc

    - 상위 폴더에 있는 파일 import
        - Structure
            -folder1
            --aaa.py
            --bbb.py
            --folder2
            ---ccc.py

        - ccc.py에서 aaa.py 불러올 때
            import sys, os
            sys.path.append(os.path.dirname(os.path.abspath(os.path.dirname(__file__))))
            import aaa

    - 다른 경로에 있는 파일 import
        - Structure
            -folder1
            --aaa.py
            --bbb.py
            --folder2
            ---ccc.py
            --folder3
            ---ddd.py

        - ccc.py에서 ddd.py 불러올 때
            import sys, os
            sys.path.append(os.path.dirname(os.path.abspath(os.path.dirname(__file__))))
            from folder3 import ddd